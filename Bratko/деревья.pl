
дер(дер(nil,b,nil),a,дер(дер(nil,d,nil),c,nil)).

внутри(X,дер(_,X,_)). % корень

внутри(X,дер(L,_,_)):-  % проход по левому дереву
    внутри(X,L).

внутри(X,дер(_,_,R)):-  % проход по правому дереву
    внутри(X,R).

/*
Упорядоченное двоичное дерево

Будем говорить, что непустое дерево дер( Лев, X, Прав) упорядочено слева направо, если

(1) все вершины левого поддерева Лев меньше X;

(2) все вершины правого поддерева Прав больше X;

(3) оба поддерева упорядочены.

Будем называть такое двоичное дерево двоичным справочником. 

Общий метод поиска в двоичном справочнике состоит в следующем:
Для того, чтобы найти элемент X в справочнике Д, необходимо:

• если X — это корень справочника Д, то считать, что X уже найден, иначе
• если X меньше, чем корень, то искать X в левом поддереве, иначе
• искать X в правом поддереве;
• если справочник Д пуст, то поиск терпит неудачу.
*/



