/*
1. Напишите предикат p(+L,  -S) - истинный тогда и только тогда, когда L - список списков,
 а S - список, объединяющий все эти списки в один.

тесты:
p([],S).
S=[],

p([[a]],S).
S=[a]

p([[a],[b]], S).
S=[a,b].
*/ 
 
p([],[]). % если исходный список - пустой

p(L,S):-            % Обработка с
    p(L,[],S1),     % накапливающим параметром
    реверс(S1,S).   % далаем реверс списка

p([],S,S).  % если исходный список - пустой

p([H|T],L1,S):-     % Обработка исходного списка 
    [_|H] = [_,H1], % по условию, голова - всегда список, распаковываем голову в переменную
    p(T,[H1|L1],S). % дабавляем голову во временный список, уходим в цикл


% вспомогательная функция - реверс списка.
реверс([],[]).

реверс(L1,L):-
    реверс(L1,[],L).

реверс([],L,L).

реверс([H|L1],L2,L):-
    реверс(L1, [H|L2],L).

 /*
 2. Напишите предикат p(+L, -S)- истинный тогда и только тогда,
 когда список S есть циклическая перестановка элементов списка L,
 например,  p([f, g, h, j], [g, h, j, f]) -истина.

 тесты:
 
p2([],S).
S = [].

p2([a],S).
S = [a].

p2([a,b],S).
S = [b,a].

p2([f, g, h, j],S).
S = [g, h, j, f].

*/

p2([],[]).   % если исходный список - пустой


p2([H|L1],L):-  % выполнить сдвиг списка влево
    объединить(L1,[H],L).   % Объединить два списка, голова в начале.

объединить([],L,L).             % ф-я объединения списков.
объединить([H|T],L1,[H|L]):-
    объединить(T,L1,L).