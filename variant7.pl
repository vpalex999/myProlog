/*
Вариант 7
1. Определите предикат p(+U, +V, -L) - истинный тогда и только тогда,
когда список L есть список всех элементов списка U,не содержащихся в списке V. 

тесты:

p([1,2,3,4],[1,2,3],L).
L = [4].

p([1],[1],L).
L = [].

p([],[1],L).
L = [].

p([1],[],L).
L = [1].

p([],[],L).
L = [].

*/

p([],_,[]).

p(U,V,L):-          % рассширяем функцию
    p(U,V,[],L).    % добавить накапливающий параметр

p([],_,L,L).        % граничное условие - список U - пустой

p([X|U],V,L1,L):-   % если V содержит X
    содержит(X,V),  %
    p(U,V,L1,L).    % Х - не переносим

p([X|U],V,L1,L):-       % если V не содержит Х
    \+(содержит(X,V)),
    p(U,V,[X|L1],L).    % накапливаем Х в L1


% ф-я проверки на членство Х в списке.
содержит(H,[H|_]).
содержит(H,[_|T]):-
    содержит(H,T).


/*
2. Определите предикат p(+U, +V, -L) - истинный тогда и только тогда,
когда L - список всех элементов, содержащихся либо в списке U,
либо в списке V, но не одновременно в U и V.

тесты:

p([1],[2],L).
L = [1,2].

p([],[],L).
L = [].

p([1],[1],L).
L = [].

p([1,2],[2],L).
L = [1].

p([1,2],[1,3,4],L).
L = [2,3,4].

p([],[1,2],L).
L = [1,2].

p([1,2],[],L).
L = [1,2]

*/

p2([],[],[]).       % если пустые списки
p2([X],[X],[X]).    % если одинаковые списки из одного элемента

